name: üèóÔ∏è Release Build
on:
  release:
    types: [published]
env:
  CARGO_TERM_COLOR: always
jobs:
  check:
    name: üßê Pre-build check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup toolchain
        run: rustup component add clippy rustfmt
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose
      - name: Lint
        run: cargo clippy --verbose
      - name: Format check
        run: cargo fmt -- --check
  build:
    name: üèóÔ∏è Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: check
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Compile
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: 'README.md LICENSE'
